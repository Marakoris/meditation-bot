#!/bin/bash
# quick_install.sh - –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Meditation Bot —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏

echo "üßò –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Meditation Bot"
echo "====================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_step() {
    echo -e "\n${GREEN}‚û§ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root
if [ "$EUID" -ne 0 ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo $0"
    exit 1
fi

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BOT_DIR="/root/meditation_bot"
VENV_DIR="$BOT_DIR/meditation_bot_env"
SERVICE_NAME="meditation-bot"

print_step "1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)"
systemctl stop $SERVICE_NAME 2>/dev/null || true

print_step "2. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
mkdir -p $BOT_DIR
cd $BOT_DIR

print_step "3. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python"
python3 -m venv $VENV_DIR
source $VENV_DIR/bin/activate

print_step "4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
pip install --upgrade pip
pip install aiogram==3.3.0 asyncpg==0.29.0 aiohttp==3.9.1 python-dotenv==1.0.0 pytz==2024.1

print_step "5. –°–æ–∑–¥–∞–Ω–∏–µ requirements.txt"
cat > $BOT_DIR/requirements.txt << 'EOF'
aiogram==3.3.0
asyncpg==0.29.0
aiohttp==3.9.1
python-dotenv==1.0.0
pytz==2024.1
EOF

print_step "6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL"
if ! command -v psql &> /dev/null; then
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL..."
    apt update
    apt install -y postgresql postgresql-contrib
    systemctl start postgresql
    systemctl enable postgresql
else
    print_info "PostgreSQL —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
print_info "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö meditation_bot..."
sudo -u postgres psql << 'EOF'
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_catalog.pg_user WHERE usename = 'meditation_user') THEN
        CREATE USER meditation_user WITH PASSWORD 'Med1tat10n_2024!';
    END IF;
END
$$;

DROP DATABASE IF EXISTS meditation_bot;
CREATE DATABASE meditation_bot OWNER meditation_user;
GRANT ALL PRIVILEGES ON DATABASE meditation_bot TO meditation_user;
\q
EOF

print_step "7. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (.env)"
cat > $BOT_DIR/.env << 'EOF'
# Telegram Bot Token - –ü–û–õ–£–ß–ò–¢–ï –£ @BotFather
BOT_TOKEN=YOUR_BOT_TOKEN_HERE

# Database (–æ–±—ã—á–Ω–æ –Ω–µ –Ω—É–∂–Ω–æ –º–µ–Ω—è—Ç—å)
DATABASE_URL=postgresql://meditation_user:Med1tat10n_2024!@localhost:5432/meditation_bot

# AI Service - –ü–û–õ–£–ß–ò–¢–ï –ö–õ–Æ–ß –ù–ê https://openrouter.ai/keys
AI_API_KEY=YOUR_AI_API_KEY_HERE
AI_SERVICE=openrouter
AI_MODEL=anthropic/claude-3-haiku

# Admin Telegram IDs - –í–ê–®–ò ID (—É–∑–Ω–∞—Ç—å —É @userinfobot)
ADMIN_IDS=YOUR_TELEGRAM_ID_HERE

# Settings
TIMEZONE=Europe/Moscow
MAX_SESSIONS_PER_DAY=10
EOF

print_step "8. –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ config.py"
cat > $BOT_DIR/config.py << 'EOF'
# config.py
from dotenv import load_dotenv
load_dotenv()

import os
from dataclasses import dataclass, field
from typing import Optional

@dataclass
class Config:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # Bot
    BOT_TOKEN: str = field(default_factory=lambda: os.getenv("BOT_TOKEN", ""))
    
    # Database
    DATABASE_URL: str = field(default_factory=lambda: os.getenv(
        "DATABASE_URL", 
        "postgresql://meditation_user:Med1tat10n_2024!@localhost:5432/meditation_bot"
    ))
    
    # AI Service
    AI_API_KEY: str = field(default_factory=lambda: os.getenv("AI_API_KEY", ""))
    AI_SERVICE: str = field(default_factory=lambda: os.getenv("AI_SERVICE", "openrouter"))
    AI_MODEL: str = field(default_factory=lambda: os.getenv("AI_MODEL", "anthropic/claude-3-haiku"))
    
    # Admin IDs
    ADMIN_IDS: list[int] = field(default_factory=lambda: [
        int(id.strip()) 
        for id in os.getenv("ADMIN_IDS", "").split(",") 
        if id.strip()
    ])
    
    # Optional settings
    TIMEZONE: str = field(default_factory=lambda: os.getenv("TIMEZONE", "Europe/Moscow"))
    MAX_SESSIONS_PER_DAY: int = field(default_factory=lambda: int(os.getenv("MAX_SESSIONS_PER_DAY", "10")))
    
    def __post_init__(self):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        if not self.BOT_TOKEN:
            raise ValueError("BOT_TOKEN is required")
        
        if not self.AI_API_KEY:
            raise ValueError("AI_API_KEY is required")
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º DATABASE_URL –¥–ª—è asyncpg –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if self.DATABASE_URL.startswith("postgres://"):
            self.DATABASE_URL = self.DATABASE_URL.replace(
                "postgres://", "postgresql://", 1
            )
EOF

print_step "9. –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"
mkdir -p $BOT_DIR/handlers
touch $BOT_DIR/handlers/__init__.py

print_step "10. –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞"
cat > /etc/systemd/system/$SERVICE_NAME.service << EOF
[Unit]
Description=Meditation Telegram Bot
After=network.target postgresql.service
Wants=network.target

[Service]
Type=simple
User=root
WorkingDirectory=$BOT_DIR
Environment=PATH=$VENV_DIR/bin
ExecStart=$VENV_DIR/bin/python bot.py
Restart=always
RestartSec=10

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
StandardOutput=journal
StandardError=journal
SyslogIdentifier=$SERVICE_NAME

[Install]
WantedBy=multi-user.target
EOF

print_step "11. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
cat > $BOT_DIR/manage.sh << 'EOF'
#!/bin/bash
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Meditation Bot

SERVICE="meditation-bot"
BOT_DIR="/root/meditation_bot"
VENV_DIR="$BOT_DIR/meditation_bot_env"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

case "$1" in
    start)
        echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...${NC}"
        systemctl start $SERVICE
        sleep 2
        systemctl status $SERVICE --no-pager
        ;;
    stop)
        echo -e "${YELLOW}‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...${NC}"
        systemctl stop $SERVICE
        ;;
    restart)
        echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...${NC}"
        systemctl restart $SERVICE
        sleep 2
        systemctl status $SERVICE --no-pager
        ;;
    status)
        systemctl status $SERVICE
        ;;
    logs)
        echo -e "${GREEN}üìã –õ–æ–≥–∏ –±–æ—Ç–∞ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}"
        journalctl -u $SERVICE -f
        ;;
    test)
        echo -e "${YELLOW}üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫...${NC}"
        cd $BOT_DIR
        source $VENV_DIR/bin/activate
        python config.py && echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OK" || echo "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        ;;
    check)
        echo -e "${GREEN}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤...${NC}"
        echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:"
        [ -f "$BOT_DIR/bot.py" ] && echo "‚úÖ bot.py" || echo "‚ùå bot.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        [ -f "$BOT_DIR/config.py" ] && echo "‚úÖ config.py" || echo "‚ùå config.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        [ -f "$BOT_DIR/.env" ] && echo "‚úÖ .env" || echo "‚ùå .env –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        [ -d "$VENV_DIR" ] && echo "‚úÖ venv" || echo "‚ùå venv –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        echo ""
        echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:"
        cd $BOT_DIR
        source $VENV_DIR/bin/activate
        python -c "from config import Config; c=Config(); print('BOT_TOKEN:', 'OK' if c.BOT_TOKEN else '–ù–ï –ó–ê–î–ê–ù')"
        python -c "from config import Config; c=Config(); print('AI_API_KEY:', 'OK' if c.AI_API_KEY else '–ù–ï –ó–ê–î–ê–ù')"
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs|test|check}"
        echo ""
        echo "  start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
        echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        echo "  status   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
        echo "  logs     - –°–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
        echo "  test     - –¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        echo "  check    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤"
        exit 1
        ;;
esac
EOF

chmod +x $BOT_DIR/manage.sh

print_step "12. –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞"
systemctl daemon-reload
systemctl enable $SERVICE_NAME

print_step "‚úÖ –ë–∞–∑–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

echo ""
echo -e "${YELLOW}üìã –ß–¢–û –ù–£–ñ–ù–û –°–î–ï–õ–ê–¢–¨ –î–ê–õ–ï–ï:${NC}"
echo ""
echo "1. ${GREEN}–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –±–æ—Ç–∞ –≤ $BOT_DIR:${NC}"
echo "   –ù—É–∂–Ω—ã —Ñ–∞–π–ª—ã: bot.py, database.py, keyboards.py, ai_service.py"
echo "   states.py, prompts.py, utils.py –∏ –ø–∞–ø–∫–∞ handlers/"
echo ""
echo "2. ${GREEN}–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:${NC}"
echo "   nano $BOT_DIR/.env"
echo "   - –î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –æ—Ç @BotFather"
echo "   - –î–æ–±–∞–≤—å—Ç–µ AI_API_KEY (–ø–æ–ª—É—á–∏—Ç—å –Ω–∞ https://openrouter.ai/keys)"
echo "   - –î–æ–±–∞–≤—å—Ç–µ ADMIN_IDS (—É–∑–Ω–∞—Ç—å —É @userinfobot)"
echo ""
echo "3. ${GREEN}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã:${NC}"
echo "   $BOT_DIR/manage.sh check"
echo ""
echo "4. ${GREEN}–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:${NC}"
echo "   $BOT_DIR/manage.sh start"
echo ""
echo "5. ${GREEN}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:${NC}"
echo "   $BOT_DIR/manage.sh logs"
echo ""
echo -e "${BLUE}üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:${NC}"
echo "$BOT_DIR/"
echo "‚îú‚îÄ‚îÄ meditation_bot_env/  # –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
echo "‚îú‚îÄ‚îÄ bot.py              # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª (–ù–£–ñ–ù–û –°–ö–û–ü–ò–†–û–í–ê–¢–¨)"
echo "‚îú‚îÄ‚îÄ config.py           # ‚úÖ –°–æ–∑–¥–∞–Ω"
echo "‚îú‚îÄ‚îÄ database.py         # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–ù–£–ñ–ù–û –°–ö–û–ü–ò–†–û–í–ê–¢–¨)"
echo "‚îú‚îÄ‚îÄ keyboards.py        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–ù–£–ñ–ù–û –°–ö–û–ü–ò–†–û–í–ê–¢–¨)"
echo "‚îú‚îÄ‚îÄ ai_service.py       # AI —Å–µ—Ä–≤–∏—Å (–ù–£–ñ–ù–û –°–ö–û–ü–ò–†–û–í–ê–¢–¨)"
echo "‚îú‚îÄ‚îÄ states.py           # –°–æ—Å—Ç–æ—è–Ω–∏—è FSM (–ù–£–ñ–ù–û –°–ö–û–ü–ò–†–û–í–ê–¢–¨)"
echo "‚îú‚îÄ‚îÄ prompts.py          # AI –ø—Ä–æ–º–ø—Ç—ã (–ù–£–ñ–ù–û –°–ö–û–ü–ò–†–û–í–ê–¢–¨)"
echo "‚îú‚îÄ‚îÄ utils.py            # –£—Ç–∏–ª–∏—Ç—ã (–ù–£–ñ–ù–û –°–ö–û–ü–ò–†–û–í–ê–¢–¨)"
echo "‚îú‚îÄ‚îÄ handlers/           # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–ù–£–ñ–ù–û –°–ö–û–ü–ò–†–û–í–ê–¢–¨)"
echo "‚îú‚îÄ‚îÄ .env                # ‚úÖ –°–æ–∑–¥–∞–Ω (–ù–£–ñ–ù–û –ù–ê–°–¢–†–û–ò–¢–¨)"
echo "‚îú‚îÄ‚îÄ requirements.txt    # ‚úÖ –°–æ–∑–¥–∞–Ω"
echo "‚îî‚îÄ‚îÄ manage.sh           # ‚úÖ –°–æ–∑–¥–∞–Ω"
echo ""
echo -e "${GREEN}üéØ –ü–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env –∑–∞–ø—É—Å—Ç–∏—Ç–µ:${NC}"
echo "   $BOT_DIR/manage.sh start"
